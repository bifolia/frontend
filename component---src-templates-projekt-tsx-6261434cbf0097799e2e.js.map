{"version":3,"file":"component---src-templates-projekt-tsx-6261434cbf0097799e2e.js","mappings":"mKAmCA,UAnB6D,SAAC,GAKvD,IAHqBA,EAGtB,EAJJC,KACEC,eAAkBD,KAELE,EACX,EADJC,YAAeD,GAEf,EAEIH,EAASK,MAAK,SAACC,GAAD,OAAaH,IAAOG,EAAQH,MAD5CI,WAAcC,EADhB,EACgBA,KAAMC,EADtB,EACsBA,YAAaC,EADnC,EACmCA,KAGnC,OACE,gBAAC,IAAD,CAAQC,KAAMC,EAAAA,GAAAA,UACZ,gBAAC,IAAD,CAAKC,MAAOH,EAAMD,YAAaA,IAC/B,sBAAIK,UAAU,iBAAiBJ,GAC/B,gBAAC,IAAD,CAAMK,WAAYP","sources":["webpack://bifolia/./src/templates/projekt.tsx"],"sourcesContent":["import './projekt.scss'\nimport { AllResult, Page, Project } from '../types'\nimport { PageProps, graphql } from 'gatsby'\nimport React, { FunctionComponent } from 'react'\nimport { Body } from '../components/Body'\nimport { Layout } from '../components/Layout'\nimport { SEO } from '../components/SEO'\n\ntype Data = {\n  strapiProjects: AllResult<Project>\n}\n\ntype Context = {\n  id: number\n}\n\nconst Projekt: FunctionComponent<PageProps<Data, Context>> = ({\n  data: {\n    strapiProjects: { data: projects },\n  },\n  pageContext: { id },\n}) => {\n  const {\n    attributes: { body, description, name },\n  } = projects.find((project) => id === project.id)!\n\n  return (\n    <Layout page={Page.Projekte}>\n      <SEO title={name} description={description} />\n      <h1 className=\"Projekt__name\">{name}</h1>\n      <Body components={body} />\n    </Layout>\n  )\n}\n\nexport default Projekt\n\nexport const query = graphql`\n  {\n    strapiProjects {\n      data {\n        id\n        attributes {\n          name\n          description\n          body {\n            strapi_component\n            layout {\n              position\n              len\n            }\n            content\n            is_large\n            marginless\n            caption\n            url\n            entries {\n              name\n              values {\n                value\n              }\n            }\n            source {\n              data {\n                attributes {\n                  localFile {\n                    childImageSharp {\n                      gatsbyImageData(\n                        width: 3840\n                        quality: 100\n                        placeholder: BLURRED\n                        formats: [AUTO, WEBP]\n                      )\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["projects","data","strapiProjects","id","pageContext","find","project","attributes","body","description","name","page","Page","title","className","components"],"sourceRoot":""}