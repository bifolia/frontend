{"version":3,"file":"component---src-pages-journal-tsx-87f4e73318d0f3677b76.js","mappings":";8LASO,MAAMA,EAAwBC,IAEvB,IADZC,OAAO,MAAEC,EAAK,KAAEC,EAAI,QAAEC,EAAO,KAAEC,IACzB,EACN,MAAMC,EAAOF,GAAWA,EAAQG,KAAIC,IAAAA,IAAC,KAAEC,GAAM,SAAKA,CAAI,IAAEC,KAAK,OAE7D,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,yBACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,gCAAgCV,GAC9CS,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,+BACVT,EACDQ,EAAAA,cAAAA,KAAAA,MACCL,GAAI,OAAWA,GAElBK,EAAAA,cAACE,EAAAA,EAAI,CAACC,WAAYT,IACd,4CCcV,MApBoDL,IAAA,IAClDe,MACEC,eAAe,YAAEC,GACjBC,eAAiBC,MAAOC,KAE3B,SACCT,EAAAA,cAACU,EAAAA,EAAM,CAACC,KAAMC,EAAAA,GAAAA,QAAcX,UAAU,WACpCD,EAAAA,cAACa,EAAAA,EAAG,CAACtB,MAAM,UAAUe,YAAaA,IACjCG,EACEK,MACC,CAACC,EAAGC,IACFC,IAAOD,EAAExB,KAAM,eAAgB,MAAM0B,OACrCD,IAAOF,EAAEvB,KAAM,eAAgB,MAAM0B,SAExCtB,KAAI,CAACN,EAAO6B,IACXnB,EAAAA,cAACZ,EAAqB,CAACE,MAAOA,EAAO8B,IAAKD,MAEvC,yBCvBH,SAAWF,GAAU,aAIzB,SAASI,EAAoBC,EAAQC,EAAeH,EAAKI,GACrD,IAAIC,EAAS,CACTC,EAAG,CAAC,cAAe,gBACnBC,EAAG,CAAC,cAAe,gBACnBC,EAAG,CAAC,UAAW,aACfC,GAAI,CAACP,EAAS,QAASA,EAAS,UAChCQ,EAAG,CAAC,aAAc,eAClBC,EAAG,CAAC,YAAa,eACjBC,GAAI,CAACV,EAAS,UAAWA,EAAS,YAClCW,EAAG,CAAC,WAAY,cAChBC,GAAI,CAACZ,EAAS,SAAUA,EAAS,YAErC,OAAOC,EAAgBE,EAAOL,GAAK,GAAKK,EAAOL,GAAK,EACxD,CAESH,EAAOkB,aAAa,KAAM,CAC/BC,OAAQ,qFAAqFC,MACzF,KAEJC,YACI,6DAA6DD,MAAM,KACvEE,kBAAkB,EAClBC,SACI,8DAA8DH,MAC1D,KAERI,cAAe,8BAA8BJ,MAAM,KACnDK,YAAa,uBAAuBL,MAAM,KAC1CM,oBAAoB,EACpBC,eAAgB,CACZC,GAAI,QACJC,IAAK,WACLC,EAAG,aACHC,GAAI,eACJC,IAAK,qBACLC,KAAM,4BAEVC,SAAU,CACNC,QAAS,sBACTC,SAAU,IACVC,QAAS,uBACTC,SAAU,qBACVC,QAAS,wBACTC,SAAU,gCAEdC,aAAc,CACVC,OAAQ,QACRC,KAAM,SACNC,EAAG,oBACHC,GAAI,cACJpC,EAAGL,EACH0C,GAAI,aACJpC,EAAGN,EACH2C,GAAI,aACJpC,EAAGP,EACHQ,GAAIR,EACJS,EAAGT,EACH4C,GAAI,YACJlC,EAAGV,EACHW,GAAIX,EACJY,EAAGZ,EACHa,GAAIb,GAER6C,uBAAwB,YACxBC,QAAS,MACTC,KAAM,CACFC,IAAK,EACLC,IAAK,IAMhB,CAhFyCC,CAAQ,EAAQ","sources":["webpack://bifolia/./src/components/JournalEntryComponent.tsx","webpack://bifolia/./src/pages/journal.tsx","webpack://bifolia/./node_modules/moment/locale/de.js"],"sourcesContent":["import './JournalEntryComponent.scss'\nimport { Body } from './Body'\nimport { JournalEntry } from '../types'\nimport React from 'react'\n\ntype Props = {\n  entry: JournalEntry\n}\n\nexport const JournalEntryComponent = ({\n  entry: { title, date, authors, body },\n}: Props) => {\n  const from = authors && authors.map(({ name }) => name).join(' & ')\n\n  return (\n    <div className=\"JournalEntryComponent\">\n      <h1 className=\"JournalEntryComponent__title\">{title}</h1>\n      <p className=\"JournalEntryComponent__meta\">\n        {date}\n        <br />\n        {from && `von ${from}`}\n      </p>\n      <Body components={body} />\n    </div>\n  )\n}\n","import './journal.scss'\nimport 'moment/locale/de'\nimport { JournalEntry, Page } from '../types'\nimport { PageProps, graphql } from 'gatsby'\nimport React, { FunctionComponent } from 'react'\nimport { JournalEntryComponent } from '../components/JournalEntryComponent'\nimport { Layout } from '../components/Layout'\nimport { SEO } from '../components/SEO'\nimport moment from 'moment'\n\ntype Data = {\n  strapiJournal: {\n    description: string\n  }\n  allStrapiText: { nodes: JournalEntry[] }\n}\n\nconst Journal: FunctionComponent<PageProps<Data>> = ({\n  data: {\n    strapiJournal: { description },\n    allStrapiText: { nodes: entries },\n  },\n}) => (\n  <Layout page={Page.Journal} className=\"Journal\">\n    <SEO title=\"Journal\" description={description} />\n    {entries\n      .sort(\n        (a, b) =>\n          moment(b.date, 'D. MMMM YYYY', 'de').unix() -\n          moment(a.date, 'D. MMMM YYYY', 'de').unix(),\n      )\n      .map((entry, i) => (\n        <JournalEntryComponent entry={entry} key={i} />\n      ))}\n  </Layout>\n)\n\nexport default Journal\n\nexport const query = graphql`\n  {\n    strapiJournal {\n      description\n    }\n    allStrapiText {\n      nodes {\n        title\n        date(formatString: \"D. MMMM YYYY\", locale: \"de\")\n        authors {\n          name\n        }\n        body {\n          ... on STRAPI__COMPONENT_BASE_IMAGE {\n            strapi_component\n            layout {\n              position\n              len\n            }\n            caption\n            # url\n            source {\n              localFile {\n                childImageSharp {\n                  gatsbyImageData(\n                    width: 1920\n                    quality: 100\n                    placeholder: BLURRED\n                    formats: [AUTO, WEBP]\n                  )\n                }\n              }\n            }\n          }\n          ... on STRAPI__COMPONENT_BASE_TEXT {\n            strapi_component\n            layout {\n              position\n              len\n            }\n            content {\n              data {\n                content\n              }\n            }\n            is_large\n            marginless\n          }\n        }\n      }\n    }\n  }\n`\n","//! moment.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion Elensúle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    //! moment.js locale configuration\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            m: ['eine Minute', 'einer Minute'],\n            h: ['eine Stunde', 'einer Stunde'],\n            d: ['ein Tag', 'einem Tag'],\n            dd: [number + ' Tage', number + ' Tagen'],\n            w: ['eine Woche', 'einer Woche'],\n            M: ['ein Monat', 'einem Monat'],\n            MM: [number + ' Monate', number + ' Monaten'],\n            y: ['ein Jahr', 'einem Jahr'],\n            yy: [number + ' Jahre', number + ' Jahren'],\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var de = moment.defineLocale('de', {\n        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(\n            '_'\n        ),\n        monthsShort:\n            'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact: true,\n        weekdays:\n            'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(\n                '_'\n            ),\n        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY HH:mm',\n            LLLL: 'dddd, D. MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: 'vor %s',\n            s: 'ein paar Sekunden',\n            ss: '%d Sekunden',\n            m: processRelativeTime,\n            mm: '%d Minuten',\n            h: processRelativeTime,\n            hh: '%d Stunden',\n            d: processRelativeTime,\n            dd: processRelativeTime,\n            w: processRelativeTime,\n            ww: '%d Wochen',\n            M: processRelativeTime,\n            MM: processRelativeTime,\n            y: processRelativeTime,\n            yy: processRelativeTime,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    return de;\n\n})));\n"],"names":["JournalEntryComponent","_ref","entry","title","date","authors","body","from","map","_ref2","name","join","React","className","Body","components","data","strapiJournal","description","allStrapiText","nodes","entries","Layout","page","Page","SEO","sort","a","b","moment","unix","i","key","processRelativeTime","number","withoutSuffix","isFuture","format","m","h","d","dd","w","M","MM","y","yy","defineLocale","months","split","monthsShort","monthsParseExact","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","sameElse","nextDay","nextWeek","lastDay","lastWeek","relativeTime","future","past","s","ss","mm","hh","ww","dayOfMonthOrdinalParse","ordinal","week","dow","doy","factory"],"sourceRoot":""}