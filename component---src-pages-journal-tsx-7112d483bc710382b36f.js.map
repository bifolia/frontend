{"version":3,"file":"component---src-pages-journal-tsx-7112d483bc710382b36f.js","mappings":"sLASaA,EAAwB,SAAC,GAExB,IAAD,IADXC,MAASC,EACE,EADFA,MAAOC,EACL,EADKA,KAAMC,EACX,EADWA,QAASC,EACpB,EADoBA,KAEzBC,EAAOF,GAAWA,EAAQG,KAAI,qBAAGC,QAAiBC,KAAK,OAE7D,OACE,uBAAKC,UAAU,yBACb,sBAAIA,UAAU,gCAAgCR,GAC9C,qBAAGQ,UAAU,+BACVP,EACD,2BACCG,GAAI,OAAWA,GAElB,gBAACK,EAAA,EAAD,CAAMC,WAAYP,M,mBCiBxB,EAxBoD,SAAC,GAAD,QAClDQ,KAGoBC,EAJ8B,EAEhDC,cACEF,KACEG,WAAcF,YAGGG,EAP2B,EAOhDC,YAAeL,KAPiC,OAUlD,gBAACM,EAAA,EAAD,CAAQC,KAAMC,EAAAA,GAAAA,QAAcX,UAAU,WACpC,gBAACY,EAAA,EAAD,CAAKpB,MAAM,UAAUY,YAAaA,IACjCG,EACEM,MACC,SAACC,EAAGC,GAAJ,OACE,IAAIC,KAAKD,EAAET,WAAWb,MAAMwB,UAC5B,IAAID,KAAKF,EAAER,WAAWb,MAAMwB,aAE/BpB,KAAI,WAAwBqB,GAAxB,IAAe3B,EAAf,EAAGe,WAAH,OACH,gBAAChB,EAAD,CAAuBC,MAAOA,EAAO4B,IAAKD","sources":["webpack://bifolia/./src/components/JournalEntryComponent.tsx","webpack://bifolia/./src/pages/journal.tsx"],"sourcesContent":["import './JournalEntryComponent.scss'\nimport { Body } from './Body'\nimport { JournalEntry } from '../types'\nimport React from 'react'\n\ntype Props = {\n  entry: JournalEntry\n}\n\nexport const JournalEntryComponent = ({\n  entry: { title, date, authors, body },\n}: Props) => {\n  const from = authors && authors.map(({ name }) => name).join(' & ')\n\n  return (\n    <div className=\"JournalEntryComponent\">\n      <h1 className=\"JournalEntryComponent__title\">{title}</h1>\n      <p className=\"JournalEntryComponent__meta\">\n        {date}\n        <br />\n        {from && `von ${from}`}\n      </p>\n      <Body components={body} />\n    </div>\n  )\n}\n","import './journal.scss'\nimport { AllResult, JournalEntry, Page, Result } from '../types'\nimport { PageProps, graphql } from 'gatsby'\nimport React, { FunctionComponent } from 'react'\nimport { JournalEntryComponent } from '../components/JournalEntryComponent'\nimport { Layout } from '../components/Layout'\nimport { SEO } from '../components/SEO'\n\ntype Data = {\n  strapiJournal: Result<{\n    description: string\n  }>\n  strapiTexts: AllResult<JournalEntry>\n}\n\nconst Journal: FunctionComponent<PageProps<Data>> = ({\n  data: {\n    strapiJournal: {\n      data: {\n        attributes: { description },\n      },\n    },\n    strapiTexts: { data: entries },\n  },\n}) => (\n  <Layout page={Page.Journal} className=\"Journal\">\n    <SEO title=\"Journal\" description={description} />\n    {entries\n      .sort(\n        (a, b) =>\n          new Date(b.attributes.date).getTime() -\n          new Date(a.attributes.date).getTime(),\n      )\n      .map(({ attributes: entry }, i) => (\n        <JournalEntryComponent entry={entry} key={i} />\n      ))}\n  </Layout>\n)\n\nexport default Journal\n\nexport const query = graphql`\n  {\n    strapiJournal {\n      data {\n        attributes {\n          description\n        }\n      }\n    }\n    strapiTexts {\n      data {\n        attributes {\n          title\n          date(formatString: \"D. MMMM YYYY\", locale: \"de\")\n          authors {\n            name\n          }\n          body {\n            strapi_component\n            layout {\n              position\n              len\n            }\n            content\n            is_large\n            marginless\n            caption\n            url\n            source {\n              data {\n                attributes {\n                  localFile {\n                    childImageSharp {\n                      gatsbyImageData(\n                        width: 3840\n                        quality: 100\n                        placeholder: BLURRED\n                        formats: [AUTO, WEBP]\n                      )\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["JournalEntryComponent","entry","title","date","authors","body","from","map","name","join","className","Body","components","data","description","strapiJournal","attributes","entries","strapiTexts","Layout","page","Page","SEO","sort","a","b","Date","getTime","i","key"],"sourceRoot":""}