{"version":3,"file":"294e31134d1659d020e91492eae42ce103a52832-379c44a8587538e24d65.js","mappings":"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","sources":["webpack://bifolia/./node_modules/camelcase/index.js","webpack://bifolia/./node_modules/extend/index.js","webpack://bifolia/../src/image-utils.ts","webpack://bifolia/../src/components/hooks.ts","webpack://bifolia/../src/components/layout-wrapper.tsx","webpack://bifolia/../src/components/picture.tsx","webpack://bifolia/../src/components/placeholder.tsx","webpack://bifolia/../src/components/main-image.tsx","webpack://bifolia/../src/components/gatsby-image.server.tsx","webpack://bifolia/../src/components/gatsby-image.browser.tsx","webpack://bifolia/../src/components/static-image.server.tsx","webpack://bifolia/../src/components/static-image.tsx","webpack://bifolia/./src/components/ImageComponent.tsx","webpack://bifolia/./src/components/TableComponent.tsx","webpack://bifolia/./node_modules/unist-util-stringify-position/index.js","webpack://bifolia/./node_modules/vfile-message/index.js","webpack://bifolia/./node_modules/vfile/lib/minpath.browser.js","webpack://bifolia/./node_modules/vfile/lib/minproc.browser.js","webpack://bifolia/./node_modules/vfile/lib/minurl.shared.js","webpack://bifolia/./node_modules/vfile/lib/minurl.browser.js","webpack://bifolia/./node_modules/vfile/lib/index.js","webpack://bifolia/./node_modules/bail/index.js","webpack://bifolia/./node_modules/is-plain-obj/index.js","webpack://bifolia/./node_modules/trough/index.js","webpack://bifolia/./node_modules/unified/lib/index.js","webpack://bifolia/./node_modules/mdast-util-to-string/index.js","webpack://bifolia/./node_modules/micromark-util-chunked/index.js","webpack://bifolia/./node_modules/micromark-util-combine-extensions/index.js","webpack://bifolia/./node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","webpack://bifolia/./node_modules/micromark-util-character/index.js","webpack://bifolia/./node_modules/micromark-factory-space/index.js","webpack://bifolia/./node_modules/micromark/lib/initialize/content.js","webpack://bifolia/./node_modules/micromark/lib/initialize/document.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://bifolia/./node_modules/micromark-util-subtokenize/index.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/content.js","webpack://bifolia/./node_modules/micromark/lib/initialize/flow.js","webpack://bifolia/./node_modules/micromark/lib/initialize/text.js","webpack://bifolia/./node_modules/micromark-util-resolve-all/index.js","webpack://bifolia/./node_modules/micromark/lib/create-tokenizer.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/list.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://bifolia/./node_modules/micromark-factory-destination/index.js","webpack://bifolia/./node_modules/micromark-factory-label/index.js","webpack://bifolia/./node_modules/micromark-factory-title/index.js","webpack://bifolia/./node_modules/micromark-factory-whitespace/index.js","webpack://bifolia/./node_modules/micromark-util-normalize-identifier/index.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/definition.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://bifolia/./node_modules/micromark-util-html-tag-name/index.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://bifolia/./node_modules/decode-named-character-reference/index.dom.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/label-end.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://bifolia/./node_modules/micromark-util-classify-character/index.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/attention.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/autolink.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/html-text.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://bifolia/./node_modules/micromark-core-commonmark/lib/code-text.js","webpack://bifolia/./node_modules/micromark/lib/constructs.js","webpack://bifolia/./node_modules/micromark/lib/preprocess.js","webpack://bifolia/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://bifolia/./node_modules/micromark-util-decode-string/index.js","webpack://bifolia/./node_modules/mdast-util-from-markdown/lib/index.js","webpack://bifolia/./node_modules/micromark/lib/postprocess.js","webpack://bifolia/./node_modules/micromark/lib/parse.js","webpack://bifolia/./node_modules/remark-parse/index.js","webpack://bifolia/./node_modules/remark-parse/lib/index.js","webpack://bifolia/./node_modules/unist-builder/index.js","webpack://bifolia/./node_modules/unist-util-is/index.js","webpack://bifolia/./node_modules/unist-util-visit-parents/index.js","webpack://bifolia/./node_modules/unist-util-visit/index.js","webpack://bifolia/./node_modules/unist-util-position/index.js","webpack://bifolia/./node_modules/mdast-util-definitions/index.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/traverse.js","webpack://bifolia/./node_modules/micromark-util-sanitize-uri/index.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/wrap.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/revert.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://bifolia/./node_modules/trim-lines/index.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/footnote.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/index.js","webpack://bifolia/./node_modules/unist-util-generated/index.js","webpack://bifolia/./node_modules/mdast-util-to-hast/lib/footer.js","webpack://bifolia/./node_modules/remark-rehype/lib/index.js","webpack://bifolia/./node_modules/property-information/lib/util/schema.js","webpack://bifolia/./node_modules/property-information/lib/util/merge.js","webpack://bifolia/./node_modules/property-information/lib/normalize.js","webpack://bifolia/./node_modules/property-information/lib/util/info.js","webpack://bifolia/./node_modules/property-information/lib/util/types.js","webpack://bifolia/./node_modules/property-information/lib/util/defined-info.js","webpack://bifolia/./node_modules/property-information/lib/util/create.js","webpack://bifolia/./node_modules/property-information/lib/xlink.js","webpack://bifolia/./node_modules/property-information/lib/xml.js","webpack://bifolia/./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://bifolia/./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://bifolia/./node_modules/property-information/lib/xmlns.js","webpack://bifolia/./node_modules/property-information/lib/aria.js","webpack://bifolia/./node_modules/property-information/lib/html.js","webpack://bifolia/./node_modules/property-information/lib/svg.js","webpack://bifolia/./node_modules/property-information/index.js","webpack://bifolia/./node_modules/react-markdown/lib/rehype-filter.js","webpack://bifolia/./node_modules/react-markdown/lib/uri-transformer.js","webpack://bifolia/./node_modules/property-information/lib/find.js","webpack://bifolia/./node_modules/property-information/lib/hast-to-react.js","webpack://bifolia/./node_modules/react-markdown/lib/ast-to-react.js","webpack://bifolia/./node_modules/hast-util-whitespace/index.js","webpack://bifolia/./node_modules/comma-separated-tokens/index.js","webpack://bifolia/./node_modules/space-separated-tokens/index.js","webpack://bifolia/./node_modules/react-markdown/lib/react-markdown.js","webpack://bifolia/./node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","webpack://bifolia/./node_modules/micromark-extension-gfm-footnote/lib/syntax.js","webpack://bifolia/./node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","webpack://bifolia/./node_modules/micromark-extension-gfm-table/lib/syntax.js","webpack://bifolia/./node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","webpack://bifolia/./node_modules/ccount/index.js","webpack://bifolia/./node_modules/mdast-util-find-and-replace/lib/index.js","webpack://bifolia/./node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","webpack://bifolia/./node_modules/mdast-util-gfm-autolink-literal/index.js","webpack://bifolia/./node_modules/mdast-util-to-markdown/lib/util/association.js","webpack://bifolia/./node_modules/mdast-util-to-markdown/lib/util/track.js","webpack://bifolia/./node_modules/mdast-util-to-markdown/lib/util/container-flow.js","webpack://bifolia/./node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","webpack://bifolia/./node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","webpack://bifolia/./node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://bifolia/./node_modules/mdast-util-to-markdown/lib/util/safe.js","webpack://bifolia/./node_modules/mdast-util-gfm-footnote/index.js","webpack://bifolia/./node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","webpack://bifolia/./node_modules/mdast-util-gfm-strikethrough/index.js","webpack://bifolia/./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://bifolia/./node_modules/markdown-table/index.js","webpack://bifolia/./node_modules/mdast-util-gfm-table/lib/index.js","webpack://bifolia/./node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://bifolia/./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://bifolia/./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://bifolia/./node_modules/mdast-util-gfm-task-list-item/index.js","webpack://bifolia/./node_modules/remark-gfm/index.js","webpack://bifolia/./node_modules/micromark-extension-gfm/index.js","webpack://bifolia/./node_modules/mdast-util-gfm/lib/index.js","webpack://bifolia/./src/components/TextComponent.tsx","webpack://bifolia/./node_modules/react-intersection-observer/react-intersection-observer.modern.mjs","webpack://bifolia/./src/components/Body.tsx","webpack://bifolia/./node_modules/inline-style-parser/index.js","webpack://bifolia/./node_modules/is-buffer/index.js","webpack://bifolia/./node_modules/react-is/cjs/react-is.production.min.js","webpack://bifolia/./node_modules/react-is/index.js","webpack://bifolia/./node_modules/style-to-object/index.js"],"sourcesContent":["'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import './ImageComponent.scss'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { Image } from '../types'\nimport React from 'react'\n\ntype Props = {\n  image: Image\n}\n\nexport const ImageComponent = ({\n  image: {\n    caption,\n    url,\n    source: { localFile },\n  },\n}: Props) => {\n  const imageData = getImage(localFile)\n  const image = imageData && (\n    <GatsbyImage image={imageData} alt={caption || ''} />\n  )\n\n  const captionElement = caption && (\n    <div className=\"ImageComponent__caption\">{caption}</div>\n  )\n\n  return (\n    <div className=\"ImageComponent\">\n      {url ? (\n        <a href={url}>\n          {image}\n          {captionElement}\n        </a>\n      ) : (\n        <>\n          {image}\n          {captionElement}\n        </>\n      )}\n    </div>\n  )\n}\n","import './TableComponent.scss'\nimport React from 'react'\nimport { Table } from '../types'\n\ntype Props = {\n  table: Table\n}\n\nexport const TableComponent = ({ table: { entries } }: Props) => (\n  <div className=\"TableComponent\">\n    {entries.map(({ name, values }, i) =>\n      values.map(({ value }, j) => (\n        <div className=\"TableComponent__row\" key={i * j}>\n          <div className=\"TableComponent__row__name\">{j === 0 && name}</div>\n          <div className=\"TableComponent__row__value\">{value}</div>\n        </div>\n      )),\n    )}\n  </div>\n)\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Reason for message.\n   *   Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place at which the message occurred in a file.\n   * @param {string} [origin]\n   *   Place in code the message originates from (example `'my-package:my-rule-name'`)\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    /** @type {string} */\n    this.message = typeof reason === 'object' ? reason.message : reason\n    /** @type {string} */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Whether this is a fatal problem that marks an associated file as no\n     * longer processable.\n     * If `true`, marks associated file as no longer processable.\n     * If `false`, necessitates a (potential) change.\n     * The value can also be `null` or `undefined`, for things that might not\n     * need changing.\n     *\n     * @type {boolean?}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number?}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number?}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full range information, when available.\n     * Has `start` and `end` fields, both set to an object with `line` and\n     * `column`, set to `number?`.\n     *\n     * @type {Position?}\n     */\n    this.position = position\n\n    /**\n     * Namespace of warning (example: `'my-package'`).\n     *\n     * @type {string?}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule-name'`).\n     *\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the VFile ecosystem).\n     *\n     * @type {string?}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string?}\n     */\n    this.actual\n\n    /**\n     * Suggest values that should be used instead of `actual`, one or more\n     * values that are deemed as acceptable.\n     *\n     * @type {Array<string>?}\n     */\n    this.expected\n\n    /**\n     * Link to documentation for the message.\n     *\n     * @type {string?}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (supported by `vfile-reporter`).\n     *\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalizeUri(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Test} [ignore]\n *   `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Exclude<Extract<Node, import('mdast').Parent>, Root>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n * @property {[Root, ...Array<Parent>, Text]} stack\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          // @ts-expect-error: stack is fine.\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {[Root, ...Array<Parent>]} parents\n       * @returns {VisitorResult}\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[_-\\d]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don’t work in this matching: `&copy;` does\n * not match `©`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * Functions to track output positions.\n * This info isn’t used yet but suchs functionality allows line wrapping,\n * and theoretically source maps (though, is there practical use in that?).\n *\n * @param {TrackFields} options_\n */\nexport function track(options_) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = options_ || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @returns {{now: Point, lineShift: number}}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @param {number} value\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past a string.\n   *\n   * @param {string} value\n   * @returns {string}\n   */\n  function move(value = '') {\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/**\n * @returns {FromMarkdownExtension}\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinition(token) {\n    this.enter(\n      {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n      token\n    )\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinitionLabelString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinition(token) {\n    this.exit(token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCall(token) {\n    this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCallString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCallString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCall(token) {\n    this.exit(token)\n  }\n}\n\n/**\n * @returns {ToMarkdownExtension}\n */\nexport function gfmFootnoteToMarkdown() {\n  footnoteReference.peek = footnoteReferencePeek\n\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteReference} node\n   */\n  function footnoteReference(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteReference')\n    const subexit = context.enter('reference')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    exit()\n    value += tracker.move(']')\n    return value\n  }\n\n  /** @type {ToMarkdownHandle} */\n  function footnoteReferencePeek() {\n    return '['\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteDefinition')\n    const subexit = context.enter('label')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    value += tracker.move(\n      ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n    )\n    tracker.shift(4)\n    value += tracker.move(\n      indentLines(containerFlow(node, context, tracker.current()), map)\n    )\n    exit()\n\n    return value\n\n    /** @type {Map} */\n    function map(line, index, blank) {\n      if (index) {\n        return (blank ? '' : '    ') + line\n      }\n\n      return line\n    }\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  indexStack.push(-1)\n  let tracker = track(safeOptions)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = track(safeOptions)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethroughs. So they sort of cancel each other out.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/c47743b/lib/unsafe.js#L11>\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('emphasis')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @type {Handle}\n * @param {InlineCode} node\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @type {Handle}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {Array<'left'|'right'|'center'|'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {Extract<import('mdast').Root|import('mdast').Content, import('unist').Parent>} Parent\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parent} */ (this.stack[this.stack.length - 2])\n  const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else if (\n        node.position &&\n        head.position &&\n        typeof head.position.start.offset === 'number'\n      ) {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @returns {Array<FromMarkdownExtension>}\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","import './TextComponent.scss'\nimport React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport { Text } from '../types'\nimport classNames from 'classnames'\nimport gfm from 'remark-gfm'\n\ntype Props = {\n  text: Text\n}\n\nexport const TextComponent = ({\n  text: {\n    content: {\n      data: { content },\n    },\n    is_large,\n    marginless,\n  },\n}: Props) => (\n  <div className={classNames('TextComponent', { large: is_large, marginless })}>\n    <ReactMarkdown remarkPlugins={[gfm]}>{content}</ReactMarkdown>\n  </div>\n)\n","import * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst observerMap = new Map();\nconst RootIds = new WeakMap();\nlet rootId = 0;\nlet unsupportedValue = undefined;\n/**\r\n * What should be the default behavior if the IntersectionObserver is unsupported?\r\n * Ideally the polyfill has been loaded, you can have the following happen:\r\n * - `undefined`: Throw an error\r\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\r\n * **/\n\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(key => options[key] !== undefined).map(key => {\n    return `${key}_${key === 'root' ? getRootId(options.root) : options[key]}`;\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map();\n    let thresholds;\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        var _elements$get;\n\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView = entry.isIntersecting && thresholds.some(threshold => entry.intersectionRatio >= threshold); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(callback => {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id,\n      observer,\n      elements\n    };\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @param fallbackInView - Fallback inView value.\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options = {}, fallbackInView = unsupportedValue) {\n  if (typeof window.IntersectionObserver === 'undefined' && fallbackInView !== undefined) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return () => {// Nothing to cleanup\n    };\n  } // An observer with the same options can be reused, so lets use this fact\n\n\n  const {\n    id,\n    observer,\n    elements\n  } = createObserver(options); // Register the callback listener for this element\n\n  let callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n\nconst _excluded = [\"children\", \"as\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\", \"fallbackInView\"];\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nclass InView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.node = null;\n    this._unobserveCb = null;\n\n    this.handleNode = node => {\n      if (this.node) {\n        // Clear the old observer, before we start observing a new element\n        this.unobserve();\n\n        if (!node && !this.props.triggerOnce && !this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          this.setState({\n            inView: !!this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      this.node = node ? node : null;\n      this.observeNode();\n    };\n\n    this.handleChange = (inView, entry) => {\n      if (inView && this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        this.unobserve();\n      }\n\n      if (!isPlainChildren(this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        this.setState({\n          inView,\n          entry\n        });\n      }\n\n      if (this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        this.props.onChange(inView, entry);\n      }\n    };\n\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView\n    } = this.props;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold,\n      root,\n      rootMargin,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay\n    }, fallbackInView);\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  }\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const {\n        inView,\n        entry\n      } = this.state;\n      return this.props.children({\n        inView,\n        entry,\n        ref: this.handleNode\n      });\n    }\n\n    const _this$props = this.props,\n          {\n      children,\n      as\n    } = _this$props,\n          props = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return React.createElement(as || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  }\n\n}\n\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange\n} = {}) {\n  var _state$entry;\n\n  const [ref, setRef] = React.useState(null);\n  const callback = React.useRef();\n  const [state, setState] = React.useState({\n    inView: !!initialInView,\n    entry: undefined\n  }); // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n\n  callback.current = onChange;\n  React.useEffect(() => {\n    // Ensure we have node ref, and that we shouldn't skip observing\n    if (skip || !ref) return;\n    let unobserve;\n    unobserve = observe(ref, (inView, entry) => {\n      setState({\n        inView,\n        entry\n      });\n      if (callback.current) callback.current(inView, entry);\n\n      if (entry.isIntersecting && triggerOnce && unobserve) {\n        // If it should only trigger once, unobserve the element after it's inView\n        unobserve();\n        unobserve = undefined;\n      }\n    }, {\n      root,\n      rootMargin,\n      threshold,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay\n    }, fallbackInView);\n    return () => {\n      if (unobserve) {\n        unobserve();\n      }\n    };\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string, so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, ref, root, rootMargin, triggerOnce, skip, trackVisibility, fallbackInView, delay]);\n  const entryTarget = (_state$entry = state.entry) == null ? void 0 : _state$entry.target;\n  React.useEffect(() => {\n    if (!ref && entryTarget && !triggerOnce && !skip) {\n      // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView,\n        entry: undefined\n      });\n    }\n  }, [ref, entryTarget, triggerOnce, skip, initialInView]);\n  const result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport { InView, defaultFallbackInView, observe, useInView };\n//# sourceMappingURL=react-intersection-observer.modern.mjs.map\n","import './Body.scss'\nimport { Component, ComponentKind } from '../types'\nimport { ImageComponent } from './ImageComponent'\nimport React from 'react'\nimport { TableComponent } from './TableComponent'\nimport { TextComponent } from './TextComponent'\nimport classNames from 'classnames'\nimport { useInView } from 'react-intersection-observer'\n\ntype Props = {\n  components: Component[]\n}\n\nexport const Body = ({ components }: Props) => (\n  <div className=\"Body\">\n    {components.map((component, i) => {\n      const { ref, inView } = useInView({\n        threshold: 0.1,\n        triggerOnce: true,\n      })\n\n      return (\n        <div\n          className={classNames(\n            'Body__component',\n            `position--${component.layout.position}`,\n            `len--${component.layout.len}`,\n            {\n              show: inView,\n            },\n          )}\n          key={i}\n          ref={ref}\n        >\n          {component.strapi_component === ComponentKind.Image ? (\n            <ImageComponent image={component} />\n          ) : component.strapi_component === ComponentKind.Table ? (\n            <TableComponent table={component} />\n          ) : component.strapi_component === ComponentKind.Text ? (\n            <TextComponent text={component} />\n          ) : null}\n        </div>\n      )\n    })}\n  </div>\n)\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n"],"names":["camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","map","x","trim","filter","length","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","hasOwn","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","arr","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","name","enumerable","configurable","value","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","arguments","deep","height","node","images","_node$images","fallback","_node$images$fallback","Boolean","gatsbyImageData","gatsbyImage","childImageSharp","_node$childImageSharp","format","isLoading","isLoaded","loading","style","shouldLoad","opacity","placeholder","layout","width","backgroundColor","objectFit","objectPosition","wrapperStyle","position","top","left","bottom","right","transition","sources","paddingTop","maxWidth","display","React","alt","role","children","props","Fragment","Sizer","srcSet","decoding","undefined","t","s","sizes","Image","media","type","fallbackImage","propTypes","PropTypes","Picture","displayName","isRequired","Placeholder","_Picture$propTypes","propName","componentName","MainImage","rest","image","altValidator","Set","as","className","class","preactClass","onStartLoad","onLoad","onError","overflow","wStyle","wClass","wrapperProps","useRef","useMemo","JSON","stringify","sizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","current","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","memo","warn","GatsbyImageHydrator","GatsbyImage","checkDimensionProps","validLayouts","Error","GatsbyImageBrowser","__imageData","imageData","__error","console","StaticImage","ImageComponent","_ref","caption","url","source","localFile","getImage","captionElement","href","TableComponent","table","entries","values","j","stringifyPosition","point","index","line","column","pos","start","end","VFileMessage","reason","place","origin","parts","super","indexOf","this","message","stack","fatal","ruleId","file","actual","expected","note","path","basename","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","segments","joined","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","normalize","sep","proc","cwd","isUrl","fileURLOrPath","urlToPath","URL","error","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","data","messages","history","stored","prop","includes","assertNonEmpty","push","assertPart","stem","encoding","info","fail","part","bail","getPrototypeOf","Symbol","toStringTag","iterator","trough","fns","pipeline","run","middlewareIndex","callback","pop","next","output","fn","middleware","called","wrapped","parameters","fnExpectsCallback","done","apply","Promise","wrap","use","middelware","unified","base","transformers","attachers","frozen","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","plugin","plugins","entry","parse","doc","vfile","assertParser","newable","String","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","assertDone","process","processSync","destination","keys","asyncName","looksLikeAVFile","one","includeImageAlt","splice","list","remove","items","chunkStart","from","unshift","combineExtensions","extensions","all","syntaxExtension","extension","hook","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","content","tokenize","contentStart","attempt","parser","contentInitial","lineStart","previous","token","contentType","self","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","document","disable","null","blankLine","partial","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","text","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","state","startIndex","startBufferIndex","endIndex","endBufferIndex","view","sliceChunks","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","buffer","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","createElement","decodeNamedCharacterReference","characterReference","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","d","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","concat","atCarriageReturn","match","endPosition","lastIndex","exec","Math","ceil","preprocess","combined","u","convert","castFactory","typeFactory","tests","checks","any","anyFactory","propsFactory","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","pointStart","pointEnd","clean","unknown","h","augment","handlers","passThrough","returnNode","unknownHandler","nodes","normalizeUri","skip","encodeURIComponent","loose","footnoteReference","id","safeId","footnoteOrder","counter","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","disabled","child","properties","rows","align","row","out","cellIndex","cell","last","lines","trimLines","toml","ignore","yaml","footnoteDefinition","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","cache","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","property","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","slot","span","spellCheck","srcDoc","srcLang","tabIndex","translate","typeMustMatch","useMap","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","operator","orient","orientation","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","valid","dash","cap","kebab","camelcase","hastToReact","tableElements","childrenToReact","childIndex","toReact","thing","skipHtml","parentSchema","schema","addProperty","listDepth","component","components","basic","linkTarget","transformLinkUri","inline","level","transformImageUri","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","dashes","find","padRight","padLeft","v","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","remarkPlugins","remarkRehypeOptions","rehypePlugins","hastNode","defaultProps","uri","first","colon","www","w2","w3","dot","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","punctuationContinuation","punctuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","wwwAutolink","previousWww","previousUnbalanced","httpAutolink","previousHttp","t1","t2","p","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","indent","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","replacement","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","single","singleTilde","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","whitespace","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","ccount","findAndReplace","RegExp","ignored","pairs","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","global","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","unsafe","split","isCorrectDomain","trailExec","closingParenIndex","openingParens","closingParens","trail","splitUrl","email","association","track","options_","lineShift","move","shift","containerFlow","safeOptions","indexStack","tracker","handle","bulletLastUsed","repeat","eol","indentLines","patternCompile","_compiled","patternInScope","listInScope","none","safe","positions","infos","expression","sort","numerical","escapeBackslashes","encode","a","b","whole","gfmFootnoteToMarkdown","peek","subexit","blank","containerPhrasing","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","handleDelete","defaultStringLength","toAlignment","gfmTableFromMarkdown","tableData","enterCell","tableHeader","tableRow","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","tableCell","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","listItemIndent","checkListItemIndent","bullet","bulletCurrent","checkBullet","incrementListMarker","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","siblings","firstParaghraph","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","remarkGfm","gfm","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","TextComponent","is_large","marginless","classNames","large","observerMap","Map","RootIds","WeakMap","unsupportedValue","rootId","optionsToId","set","get","getRootId","observe","element","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","elements","instance","thresholds","forEach","_elements$get","inView","some","trackVisibility","isVisible","createObserver","callbacks","unobserve","disconnect","InView","_unobserveCb","handleNode","triggerOnce","setState","initialInView","observeNode","handleChange","isPlainChildren","componentDidUpdate","prevProps","rootMargin","delay","componentWillUnmount","render","_this$props","excluded","sourceKeys","_objectWithoutPropertiesLoose","_extends","Body","_state$entry","setRef","entryTarget","useInView","len","show","strapi_component","ComponentKind","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","str","lineno","updatePosition","Position","errorsList","msg","err","filename","silent","re","comments","c","val","ret","decl","decls","declarations","isBuffer","for","e","f","g","l","n","q","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","hasIterator"],"sourceRoot":""}