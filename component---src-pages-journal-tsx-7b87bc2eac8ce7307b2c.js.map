{"version":3,"sources":["webpack://bifolia/./src/components/JournalEntryComponent.tsx","webpack://bifolia/./src/pages/journal.tsx"],"names":["JournalEntryComponent","entry","title","date","authors","body","from","map","name","join","className","Body","components","data","description","strapiJournal","entries","allStrapiText","Layout","page","Page","SEO","edges","i","node","key"],"mappings":"qLASaA,EAAwB,SAAC,GAExB,IAAD,IADXC,MAASC,EACE,EADFA,MAAOC,EACL,EADKA,KAAMC,EACX,EADWA,QAASC,EACpB,EADoBA,KAEzBC,EAAOF,GAAWA,EAAQG,KAAI,qBAAGC,QAAiBC,KAAK,OAE7D,OACE,uBAAKC,UAAU,yBACb,sBAAIA,UAAU,gCAAgCR,GAC9C,qBAAGQ,UAAU,+BACVP,EACD,2BACCG,GAAI,OAAWA,GAElB,gBAACK,EAAA,EAAD,CAAMC,WAAYP,M,mBCOxB,EAdoD,SAAC,GAAD,QAClDQ,KACmBC,EAF+B,EAEhDC,cAAiBD,YACFE,EAHiC,EAGhDC,cAHgD,OAMlD,gBAACC,EAAA,EAAD,CAAQC,KAAMC,aAAcV,UAAU,WACpC,gBAACW,EAAA,EAAD,CAAKnB,MAAM,UAAUY,YAAaA,IACjCE,EAAQM,MAAMf,KAAI,WAAWgB,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACjB,gBAACxB,EAAD,CAAuBC,MAAOuB,EAAMC,IAAKF","file":"component---src-pages-journal-tsx-7b87bc2eac8ce7307b2c.js","sourcesContent":["import './JournalEntryComponent.scss'\nimport { Body } from './Body'\nimport { JournalEntry } from '../types'\nimport React from 'react'\n\ntype Props = {\n  entry: JournalEntry\n}\n\nexport const JournalEntryComponent = ({\n  entry: { title, date, authors, body },\n}: Props) => {\n  const from = authors && authors.map(({ name }) => name).join(' & ')\n\n  return (\n    <div className=\"JournalEntryComponent\">\n      <h1 className=\"JournalEntryComponent__title\">{title}</h1>\n      <p className=\"JournalEntryComponent__meta\">\n        {date}\n        <br />\n        {from && `von ${from}`}\n      </p>\n      <Body components={body} />\n    </div>\n  )\n}\n","import './journal.scss'\nimport { Entries, JournalEntry, Page } from '../types'\nimport { PageProps, graphql } from 'gatsby'\nimport React, { FunctionComponent } from 'react'\nimport { JournalEntryComponent } from '../components/JournalEntryComponent'\nimport { Layout } from '../components/Layout'\nimport { SEO } from '../components/SEO'\n\ntype Data = {\n  strapiJournal: {\n    description: string\n  }\n  allStrapiText: Entries<JournalEntry>\n}\n\nconst Journal: FunctionComponent<PageProps<Data>> = ({\n  data: {\n    strapiJournal: { description },\n    allStrapiText: entries,\n  },\n}) => (\n  <Layout page={Page.Journal} className=\"Journal\">\n    <SEO title=\"Journal\" description={description} />\n    {entries.edges.map(({ node }, i) => (\n      <JournalEntryComponent entry={node} key={i} />\n    ))}\n  </Layout>\n)\n\nexport default Journal\n\nexport const query = graphql`\n  {\n    strapiJournal {\n      description\n    }\n    allStrapiText(sort: { fields: date, order: DESC }) {\n      edges {\n        node {\n          title\n          date(formatString: \"D. MMMM YYYY\", locale: \"de\")\n          authors {\n            name\n          }\n          body {\n            strapi_component\n            layout {\n              position\n              len\n            }\n            content\n            is_large\n            caption\n            url\n            entries {\n              name\n              values {\n                value\n              }\n            }\n            source {\n              localFile {\n                childImageSharp {\n                  gatsbyImageData(\n                    width: 3840\n                    quality: 100\n                    placeholder: BLURRED\n                    formats: [AUTO, WEBP]\n                  )\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}