{"version":3,"sources":["webpack://bifolia/./src/templates/projekt.tsx"],"names":["data","strapiProject","description","name","body","page","Page","title","className","components"],"mappings":"kKA4BA,UAZ6D,SAAC,GAAD,QAC3DA,KACEC,cAAiBC,EAFwC,EAExCA,YAAaC,EAF2B,EAE3BA,KAAMC,EAFqB,EAErBA,KAFqB,OAK3D,gBAAC,IAAD,CAAQC,KAAMC,eACZ,gBAAC,IAAD,CAAKC,MAAOJ,EAAMD,YAAaA,IAC/B,sBAAIM,UAAU,iBAAiBL,GAC/B,gBAAC,IAAD,CAAMM,WAAYL","file":"component---src-templates-projekt-tsx-4f9ffbb56cce81fcd3d6.js","sourcesContent":["import './projekt.scss'\nimport { Page, Project } from '../types'\nimport { PageProps, graphql } from 'gatsby'\nimport React, { FunctionComponent } from 'react'\nimport { Body } from '../components/Body'\nimport { Layout } from '../components/Layout'\nimport { SEO } from '../components/SEO'\n\ntype Data = {\n  strapiProject: Project\n}\n\ntype Context = {\n  id: string\n}\n\nconst Projekt: FunctionComponent<PageProps<Data, Context>> = ({\n  data: {\n    strapiProject: { description, name, body },\n  },\n}) => (\n  <Layout page={Page.Projekte}>\n    <SEO title={name} description={description} />\n    <h1 className=\"Projekt__name\">{name}</h1>\n    <Body components={body} />\n  </Layout>\n)\n\nexport default Projekt\n\nexport const query = graphql`\n  query Projekt($id: String) {\n    strapiProject(id: { eq: $id }) {\n      name\n      description\n      body {\n        strapi_component\n        layout {\n          position\n          len\n        }\n        content\n        is_large\n        marginless\n        caption\n        url\n        entries {\n          name\n          values {\n            value\n          }\n        }\n        source {\n          localFile {\n            childImageSharp {\n              gatsbyImageData(\n                width: 3840\n                quality: 100\n                placeholder: BLURRED\n                formats: [AUTO, WEBP]\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}